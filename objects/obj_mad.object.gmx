<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_mad_walk</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//obligatory variables
collisionable = 0
wall = 0
isfloor = 0
pushable = 0
button = 0
//neccesary variables
place = 2
instair = 0
stairpos = 0
u = 1
targetobject[u] = obj_girl
target = obj_girl
j = 1

factor = 0
i = 90

action = 0

madspeed = 1.5

timestun = 0
a = 0

firstrepeat = 0
animrepeat = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//If is not in a stair
if instair = 0
{
    //Switch between
    switch (action)
    {
//Normal action, choose target and follow it
    case 0:
        //If finds the girl, attack her
        scr_madattackcondition()
        //choose a target depending on girls place
            scr_targeting()
        //follow the target
        madspeed = 2.5
        x += sign(target.x - x) * factor * madspeed
        sprite_index = spr_mad_walk
        image_speed = 0.1
        image_xscale = -1*sign(target.x-x)
    break;
//Break door
    case 1:
        if firstrepeat = 0 image_index = 0
        firstrepeat += 1
        sprite_index = spr_mad_door
        image_speed = 0.15
        image_xscale = -1*sign(door.x-x)
        if floor(image_index) = image_number -1
        {
            animrepeat += 1
            if animrepeat = 20
            {
                instance_create (door.x, door.y, obj_door_broken)
                with (door){instance_destroy()}
                action = 0
                animrepeat = 0
                firstrepeat = 0
            }
        }
    break;
//Get damage
    case 2:
        if firstrepeat = 0 image_index = 0
        firstrepeat += 1
        sprite_index = spr_mad_damaged
        image_speed = 0.3
        if floor(image_index) = image_number -1
        {
                action = 8
                animrepeat = 0
                firstrepeat = 0
        }
    break;
//Attack girl
    case 3:
        scr_colorcorrect(0,255,0,255,0,0,2)
        image_speed = 0.05
        sprite_index = spr_mad_attack
        obj_girl.action = 2
    break;
//Idle
    case 4:
        {
        }
    break;
//Break alarm
    case 5:
        sprite_index = spr_mad_alarm
        image_speed = 0.2
        if j = 1
        {
            u -= 1
            j = 0
        }
        if image_index &gt; image_number -1
        {
            instance_create (obj_alarm.x, obj_alarm.y, obj_alarm_broken)
            with (obj_alarm){instance_destroy()}
            j = 1
            action = 0
        }
    break;
//Break radio
    case 6:
        sprite_index = spr_mad_radio
        image_speed = 0.2
        if j = 1
        {
            u -= 1
            j = 0
        }
        if image_index &gt; image_number -1
        {
            instance_create (obj_radio.x, obj_radio.y, obj_radio_broken)
            sound_stop(mus_1)
            with (obj_radio){instance_destroy()}
            j = 1
            action = 0
        }
    break;
//Break tv
    case 7:
        sprite_index = spr_mad_tv
        image_speed = 0.2
        if j = 1
        {
            u -= 1
            j = 0
        }
        if image_index &gt; image_number -1
        {
            instance_create (obj_tv_01.x, obj_tv_01.y, obj_tv_01_broken)
            with (obj_tv_01){instance_destroy()}
            j = 1
            action = 0
        }
    break;
//Stunned
    case 8:
        if firstrepeat = 0 image_index = 0
        firstrepeat += 1
        sprite_index = spr_mad_stunned
        image_speed = 0.08
        a += 1/60
        if image_index &gt; image_number -1 &amp;&amp; a &gt; timestun
        {
            a = 0
            action = 0
            firstrepeat = 0
        }
    break;
//Laughing
    case 9:
        if firstrepeat = 0 image_index = 0
        firstrepeat += 1
        sprite_index = spr_mad_laughing
        image_speed = 0.1
        if image_index &gt; image_number -1
        {
            animrepeat += 1
            if animrepeat &gt; 30
            {
                animrepeat = 0
                firstrepeat = 0
                action = 0
            }
        }
        if !audio_is_playing(snd_laugh)
        {
        scr_soundplay(x,y,snd_laugh,false)
        }
    break;
//Running
    case 10:
        //If finds the girl, attack her
        scr_madattackcondition()
        //choose a target depending on girls place
            scr_targeting()
        //follow the target
        x += sign(target.x - x) * madspeed * 2
        sprite_index = spr_mad_run
        image_speed = 0.1
        image_xscale = -1*sign(target.x-x)
    break;
//Falling
    case 11:
        if firstrepeat = 0 image_index = 0
        firstrepeat += 1
        sprite_index = spr_mad_falling
        image_speed = 0.2
        if image_index &gt; image_number -1
        {
            action = 12
            firstrepeat = 0
        }
    break;
//Lying
    case 12:
        sprite_index = spr_mad_lying
        image_speed = 0
        a += 1/60
        if a &gt; 360/60
        {
            action = 13
        }
    break;
//Get Up
    case 13:
        if firstrepeat = 0 image_index = 0
        firstrepeat += 1
        sprite_index = spr_mad_getup
        image_speed = 0.07
        if floor(image_index) = image_number -1
        {
                action = 0
                animrepeat = 0
                firstrepeat = 0
        }
    break;
    }
}
//If is in stair, move along the path assigned until reach the end
    if instair = 1
    {
        scr_madattackcondition()
        switch (action)
        {
        //Move along the path assigned until reach the end
            case 0:
                sprite_index = spr_mad_walk
                image_speed = 0.066666666
                x = path_get_x(stair, stairpos)
                y = path_get_y(stair,stairpos)
                stairpos += 0.002 * factor * madspeed
                if stairpos &gt; 1
                {
                    obj_mad.depth = 1
                    instair = 0
                    stairpos = 0
                    if y &gt; 500
                    place = 1
                    else
                    place = 2
                }
            break;
        //Ged damaged
            case 2:
            sprite_index = spr_mad_damaged
                image_speed = 0.1
                if image_index &gt; image_number -1
                {
                action = 0
                sprite_index = spr_mad_walk
                }
            break;
        //Attack Girl
            case 3:
                sprite_index = spr_mad_attack
                image_speed = 0.2
                obj_girl.action = 2
            break;
        //Paused
            case 4:
                {
                }
        //Laughing
            case 9:
                sprite_index = spr_mad_laughing
                image_speed = 0.05
                if image_index &gt; image_number -1
                {
                    action = 0
                }
            break;
        //Running
            case 10:
                sprite_index = spr_mad_run
                image_speed = 0.1
                x = path_get_x(stair, stairpos)
                y = path_get_y(stair,stairpos)
                stairpos += 0.002 * madspeed * 2
                if stairpos &gt; 1
                {
                    obj_mad.depth = 1
                    instair = 0
                    stairpos = 0
                    if y &gt; 500
                    place = 1
                    else
                    place = 2
                }
            break;
        }
    }
    
//increment of factor (for steps while walking
factor = 1//clamp(abs(sindeg(i)),0.3,1)
i += 6
if i &gt; 360
    i = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="80">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if action = 0
action = 4
else
action = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
